{"ast":null,"code":"var _jsxFileName = \"/Users/nickramsay/Documents/Projects/seng2021-project/SourceCode_and_Documentation/frontend/src/components/Searchbar/Searchbar.js\";\nimport React, { Component } from 'react';\nimport './Searchbar.css';\nimport { Cocktails } from './Cocktails'; //import { Button } from '../Button'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      search_query: '',\n      search_results: []\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    };\n\n    this.onSearchQueryChange = query => {\n      let results = [];\n\n      for (var i = 0; i < Cocktails.length(); i++) {\n        // check if query is in the cocktail name\n        if (query.includes(Cocktails[i].name)) {// append the cocktail to search_results\n        }\n      } // set search_results\n\n\n      this.setState({\n        search_results: results\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: e => this.onSearchQueryChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Searchbar;","map":{"version":3,"sources":["/Users/nickramsay/Documents/Projects/seng2021-project/SourceCode_and_Documentation/frontend/src/components/Searchbar/Searchbar.js"],"names":["React","Component","Cocktails","Searchbar","state","clicked","search_query","search_results","handleClick","setState","onSearchQueryChange","query","results","i","length","includes","name","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,cAAc,EAAE;AAHZ,KADsB;;AAAA,SAO9BC,WAP8B,GAOhB,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACH,KAT6B;;AAAA,SAW9BK,mBAX8B,GAWPC,KAAD,IAAW;AAC7B,UAAIC,OAAO,GAAG,EAAd;;AAIA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,SAAS,CAACY,MAAV,EAAnB,EAAuCD,CAAC,EAAxC,EAA4C;AACxC;AACA,YAAGF,KAAK,CAACI,QAAN,CAAeb,SAAS,CAACW,CAAD,CAAT,CAAaG,IAA5B,CAAH,EAAqC,CACjC;AACH;AACJ,OAV4B,CAa7B;;;AACA,WAAKP,QAAL,CAAc;AACVF,QAAAA,cAAc,EAAEK;AADN,OAAd;AAGH,KA5B6B;AAAA;;AA8B9BK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKR,mBAAL,CAAyBQ,CAAC,CAACC,MAAF,CAASC,KAAlC;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAvC6B;;AA0ClC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Searchbar.css';\nimport { Cocktails } from './Cocktails'\n//import { Button } from '../Button'\n\nclass Searchbar extends Component {\n    state = { \n        clicked: false,\n        search_query: '',\n        search_results: []\n    }\n\n    handleClick = () => {\n        this.setState({ clicked: !this.state.clicked })\n    }\n\n    onSearchQueryChange = (query) => {\n        let results = [];\n\n        \n\n        for(var i = 0; i < Cocktails.length(); i++) {\n            // check if query is in the cocktail name\n            if(query.includes(Cocktails[i].name)){\n                // append the cocktail to search_results\n            }\n        }\n    \n\n        // set search_results\n        this.setState({\n            search_results: results\n        })\n    }\n\n    render() {\n        return(\n            <div id=\"searchbar\">\n                <input type=\"search\" onChange={e => this.onSearchQueryChange(e.target.value)}/>\n                <ul>\n                    <li>results</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Searchbar"]},"metadata":{},"sourceType":"module"}