{"ast":null,"code":"var _jsxFileName = \"/Users/nickramsay/Documents/Projects/seng2021-project/SourceCode_and_Documentation/frontend/src/components/Searchbar/Searchbar.js\";\nimport React, { Component } from 'react';\nimport './Searchbar.css';\nimport { Cocktails } from './Cocktails'; //import { Button } from '../Button'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search_results: []\n    };\n\n    this.onSearchQueryChange = query => {\n      // declare a new results array\n      let results = []; // TODO: Search for string similarity instead of exact match (case sensitive, typo sensitive, etc)\n\n      for (var i = 0; i < Cocktails.length; i++) {\n        // check if query is in the cocktail name\n        if (query.includes(Cocktails[i].name)) {\n          // append the cocktail to search_results\n          results.push(Cocktails[i]); // move on to next cocktail, cocktail already added\n\n          continue;\n        } // loop through ingredients\n        // TODO: Search for string similarity instead of exact match (case sensitive, typo sensitive, etc)\n\n\n        for (var j = 0; j < Cocktails[i].ingredients.length; j++) {\n          if (query.includes(Cocktails[j].ingredients[j])) {\n            // append the cocktail to search_results\n            results.push(Cocktails[i]); // break the for loop, cocktail already added\n\n            break;\n          }\n        }\n      } // set search_results\n\n\n      this.setState({\n        search_results: results\n      });\n    };\n\n    this.SearchResults = props => {\n      const cocktail_names = this.state.search_results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: result.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cocktail_names\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: e => this.onSearchQueryChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.search_results[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Searchbar;","map":{"version":3,"sources":["/Users/nickramsay/Documents/Projects/seng2021-project/SourceCode_and_Documentation/frontend/src/components/Searchbar/Searchbar.js"],"names":["React","Component","Cocktails","Searchbar","state","search_results","onSearchQueryChange","query","results","i","length","includes","name","push","j","ingredients","setState","SearchResults","props","cocktail_names","map","result","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADsB;;AAAA,SAK9BC,mBAL8B,GAKPC,KAAD,IAAW;AAE7B;AACA,UAAIC,OAAO,GAAG,EAAd,CAH6B,CAK7B;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,SAAS,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC;AACA,YAAGF,KAAK,CAACI,QAAN,CAAeT,SAAS,CAACO,CAAD,CAAT,CAAaG,IAA5B,CAAH,EAAqC;AAEjC;AACAJ,UAAAA,OAAO,CAACK,IAAR,CAAaX,SAAS,CAACO,CAAD,CAAtB,EAHiC,CAKjC;;AACA;AACH,SATqC,CAUtC;AACA;;;AACA,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGZ,SAAS,CAACO,CAAD,CAAT,CAAaM,WAAb,CAAyBL,MAA5C,EAAoDI,CAAC,EAArD,EAAwD;AACpD,cAAGP,KAAK,CAACI,QAAN,CAAeT,SAAS,CAACY,CAAD,CAAT,CAAaC,WAAb,CAAyBD,CAAzB,CAAf,CAAH,EAA+C;AAE3C;AACAN,YAAAA,OAAO,CAACK,IAAR,CAAaX,SAAS,CAACO,CAAD,CAAtB,EAH2C,CAK3C;;AACA;AACH;AACJ;AACJ,OA5B4B,CA8B7B;;;AACA,WAAKO,QAAL,CAAc;AACVX,QAAAA,cAAc,EAAEG;AADN,OAAd;AAGH,KAvC6B;;AAAA,SAyC9BS,aAzC8B,GAyCbC,KAAD,IAAW;AACvB,YAAMC,cAAc,GAAG,KAAKf,KAAL,CAAWC,cAAX,CAA0Be,GAA1B,CAA+BC,MAAD,iBACjD;AAAA,kBAAKA,MAAM,CAACT;AAAZ;AAAA;AAAA;AAAA;AAAA,cADmB,CAAvB;AAIA,0BACI;AAAA,kBACKO;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAnD6B;AAAA;;AAqD9BG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKjB,mBAAL,CAAyBiB,CAAC,CAACC,MAAF,CAASC,KAAlC;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACM,KAAKrB,KAAL,CAAWC,cAAX,CAA0B,CAA1B,EAA6BO;AADnC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/D6B;;AAkElC,eAAeT,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Searchbar.css';\nimport { Cocktails } from './Cocktails'\n//import { Button } from '../Button'\n\nclass Searchbar extends Component {\n    state = { \n        search_results: []\n    }\n\n    onSearchQueryChange = (query) => {\n\n        // declare a new results array\n        let results = [];\n\n        // TODO: Search for string similarity instead of exact match (case sensitive, typo sensitive, etc)\n        for(var i = 0; i < Cocktails.length; i++) {\n            // check if query is in the cocktail name\n            if(query.includes(Cocktails[i].name)){\n\n                // append the cocktail to search_results\n                results.push(Cocktails[i]);\n\n                // move on to next cocktail, cocktail already added\n                continue;\n            }\n            // loop through ingredients\n            // TODO: Search for string similarity instead of exact match (case sensitive, typo sensitive, etc)\n            for(var j = 0; j < Cocktails[i].ingredients.length; j++){\n                if(query.includes(Cocktails[j].ingredients[j])){\n\n                    // append the cocktail to search_results\n                    results.push(Cocktails[i]);\n\n                    // break the for loop, cocktail already added\n                    break;\n                }\n            }\n        }\n    \n        // set search_results\n        this.setState({\n            search_results: results\n        })\n    }\n\n    SearchResults = (props) => {\n        const cocktail_names = this.state.search_results.map((result) =>\n            <li>{result.name}</li>\n        );\n\n        return (\n            <ul>\n                {cocktail_names}\n            </ul>\n        );\n    }\n\n    render() {\n        return(\n            <div id=\"searchbar\">\n                <input type=\"search\" onChange={e => this.onSearchQueryChange(e.target.value)}/>\n                <ul>\n                    { this.state.search_results[0].name}\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nexport default Searchbar"]},"metadata":{},"sourceType":"module"}